###
Cakefile
Author: kaustavha

This cakefile hould allow writing all dependencies and task runner config in coffee, and resolve dependencies,
run tasks and get a directory to a workable point with a single command.
###

{spawn} = require 'child_process'
fs = require 'fs'

inDir = './tools'
outDir = './'
pyethGit = 'https://github.com/kaustavha/pyethereum.git'
serpentGit = 'https://github.com/ethereum/serpent.git'
su = {uid: 0}

option '-s', '--skip', 'skip git clones and global installs'

# Convenience function for logging - todo: better err. handling
log = (msg) ->
    console.log msg

# Function to run spawnable cmdline commands
run = (spawnable, args=[], options, cb) ->
    if arguments.length is 3
        cb = options
        options = {}
    options.stdio = 'inherit'
    cmd = spawn spawnable, args, options
    cmd.on 'exit', (res) ->
        if res is 0
            log 'Ran ' + spawnable + ' ' + args
            cb() if cb
        else
            process.exit(res)

# Function to fix .json packages converted from .coffee
fixPkg = (dir, name, cb) ->
    console.log 'Fixing JSON packages'
    file = dir + name + '.json'
    fs.rename file + '.js', file, (err) ->
        return console.log err if err
        fs.readFile file, (err, data) ->
            return console.log err if err
            data = data.toString() # stringify buffer            
            pos = data.indexOf '\n' # position of end of first line which is 'generated by coffescript ver. no.', wtf?
            if pos isnt -1
                data = data.substr pos + 2 #extract desired string, pos + 2 is done to remove /n and (
                data = data.substr 0, data.length - 3 # remove ); at end
                fs.writeFile file, data, (err) ->
                    log err if err           
                    cb() if cb
            else
                log 'Unexpected end or beginning of file' + file

toolsToJS = (cb) ->
    run 'coffee', ['-b', '-o', outDir, '-c', inDir], ->
        fixPkg outDir, 'bower', ->
            fixPkg outDir, 'package', ->
                if cb then cb() else log 'Done, converted tool files and fixed JSON'

getEthereum = (cb) ->
    s = {uid: 0, cwd: './pyethereum'}
    run 'rm', ['-rf', './pyethereum'], su, ->
        run 'git', ['clone', pyethGit], ->
            run 'pip', ['install', '-r', 'requirements.txt'], s, ->
                run 'wget', ['http://downloads.buildout.org/2/bootstrap.py'], {cwd: './pyethereum'}, ->
                    run 'python', ['bootstrap.py', '-v', '2.1.1'], s, ->
                        run './bin/buildout', [], s, ->
                            if cb then cb() else log 'Done, installed pyethereum'

getSerpent = (cb) ->
    run 'rm', ['-rf', './serpent'], su, ->
        run 'git', ['clone', serpentGit], ->
            run 'python', ['setup.py', 'install'], {uid: 0, cwd: './serpent'}, ->
                if cb then cb() else log 'Done, installed serpent'

installNPMDeps = (cb) ->
    run 'npm', ['install', '-g', 'bower'], su, ->
        run 'npm', ['install', '-g', 'coffescript'], su, ->
            if cb then cb() else log 'Done, installed npm dependencies'
 
task 'build', 'copy and transpile tool files, i.e gulp, bower & npm package, and run gulp', (options) ->
    if options.skip
        run 'npm', ['install'], su, ->
            run 'bower', ['install'], {uid: 1000}, ->
                run 'node', ['server.js'], ->
                    console.log 'Bye :)'
    else
        getSerpent ->
            getEthereum ->
                toolsToJS ->
                    installNPMDeps ->
                        run 'npm', ['install'], su, ->
                            run 'bower', ['install'], {uid: 1000}, ->
                                run 'node', ['server.js'], ->
                                    console.log 'Bye :)'